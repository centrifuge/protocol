name: CI

on:
  pull_request:
    paths:
      - "src/**/*.sol"
      - "script/**/*.sol"
      - "script/utils/check_ward_coverage.py"
      - "test/integration/Deployer.t.sol"
      - ".github/workflows/ward-coverage.yml"
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-ward-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run Ward Coverage Check
        id: ward_check
        run: |
          # Capture output to both stdout and file
          python3 script/utils/check_ward_coverage.py 2>&1 | tee /tmp/ward_check_output.txt
          # Always succeed to make this an optional check
          exit 0

      - name: Check for coverage issues
        id: parse_results
        run: |
          if grep -q "❌" /tmp/ward_check_output.txt; then
            echo "has_issues=true" >> $GITHUB_OUTPUT
          else
            echo "has_issues=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && steps.parse_results.outputs.has_issues == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('/tmp/ward_check_output.txt', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ℹ️ Ward Coverage Check (Optional)\n\nThis is an informational check and will not block PR merging.\n\n<details>\n<summary>Click to view coverage report</summary>\n\n\`\`\`\n${output}\n\`\`\`\n\n</details>\n\n**Note:** Please review and address coverage gaps when possible, but this check is optional.`
            });
